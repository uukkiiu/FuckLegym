// Generated by data binding compiler. Do not edit!
package legym.fuck.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.Space;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.chip.Chip;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.Deprecated;
import java.lang.Object;
import legym.fuck.R;
import legym.fuck.logic.legym.network.model.login.LoginResult;

public abstract class ActivityMainBinding extends ViewDataBinding {
  @NonNull
  public final MaterialButton buttonRunning;

  @NonNull
  public final MaterialButton buttonSignActivity;

  @NonNull
  public final MaterialButton buttonSignCourse;

  @NonNull
  public final ConstraintLayout cardContainer;

  @NonNull
  public final CardView cardSemesterMileage;

  @NonNull
  public final Chip chipRule;

  @NonNull
  public final LinearLayout containerSubtitle;

  @NonNull
  public final AppCompatImageView imageBgHead;

  @NonNull
  public final ShapeableImageView imageHeader;

  @NonNull
  public final AppCompatImageView imageVip;

  @NonNull
  public final LinearProgressIndicator progress;

  @NonNull
  public final Space spacerBottom;

  @NonNull
  public final Space spacerSemesterMileage;

  @NonNull
  public final AppCompatTextView textIntegral;

  @NonNull
  public final AppCompatTextView textName;

  @NonNull
  public final AppCompatTextView textSemesterMileage;

  @NonNull
  public final AppCompatTextView textSemesterMileageCurrent;

  @NonNull
  public final AppCompatTextView textSemesterMileageTotal;

  @NonNull
  public final AppCompatTextView textVersion;

  @NonNull
  public final AppCompatTextView textWarning;

  @NonNull
  public final Toolbar toolbar;

  @Bindable
  protected LoginResult mUser;

  protected ActivityMainBinding(Object _bindingComponent, View _root, int _localFieldCount,
      MaterialButton buttonRunning, MaterialButton buttonSignActivity,
      MaterialButton buttonSignCourse, ConstraintLayout cardContainer, CardView cardSemesterMileage,
      Chip chipRule, LinearLayout containerSubtitle, AppCompatImageView imageBgHead,
      ShapeableImageView imageHeader, AppCompatImageView imageVip, LinearProgressIndicator progress,
      Space spacerBottom, Space spacerSemesterMileage, AppCompatTextView textIntegral,
      AppCompatTextView textName, AppCompatTextView textSemesterMileage,
      AppCompatTextView textSemesterMileageCurrent, AppCompatTextView textSemesterMileageTotal,
      AppCompatTextView textVersion, AppCompatTextView textWarning, Toolbar toolbar) {
    super(_bindingComponent, _root, _localFieldCount);
    this.buttonRunning = buttonRunning;
    this.buttonSignActivity = buttonSignActivity;
    this.buttonSignCourse = buttonSignCourse;
    this.cardContainer = cardContainer;
    this.cardSemesterMileage = cardSemesterMileage;
    this.chipRule = chipRule;
    this.containerSubtitle = containerSubtitle;
    this.imageBgHead = imageBgHead;
    this.imageHeader = imageHeader;
    this.imageVip = imageVip;
    this.progress = progress;
    this.spacerBottom = spacerBottom;
    this.spacerSemesterMileage = spacerSemesterMileage;
    this.textIntegral = textIntegral;
    this.textName = textName;
    this.textSemesterMileage = textSemesterMileage;
    this.textSemesterMileageCurrent = textSemesterMileageCurrent;
    this.textSemesterMileageTotal = textSemesterMileageTotal;
    this.textVersion = textVersion;
    this.textWarning = textWarning;
    this.toolbar = toolbar;
  }

  public abstract void setUser(@Nullable LoginResult user);

  @Nullable
  public LoginResult getUser() {
    return mUser;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_main, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityMainBinding>inflateInternal(inflater, R.layout.activity_main, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_main, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityMainBinding>inflateInternal(inflater, R.layout.activity_main, null, false, component);
  }

  public static ActivityMainBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityMainBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityMainBinding)bind(component, view, R.layout.activity_main);
  }
}
